package dns.controllers

import javax.inject.Inject
import javax.inject.Singleton
import play.api.mvc.AbstractController
import play.api.mvc.ControllerComponents
import services.CacheService
import controllers.Secured
import java.text.NumberFormat
import com.ftel.bigdata.utils.NumberUtil
import dns.utils.DataSampleUtil

/**
 * This controller creates an `Action` to handle HTTP requests to the
 * application's home page.
 */
@Singleton
class MalwareController @Inject()(cc: ControllerComponents) extends AbstractController(cc) with Secured {
//  def index =  withAuth { username => implicit request => 
//    Ok(dns.views.html.dashboard.index(username))
//  }
  
  def index =  Action {
    Ok(dns.views.html.malware.index())
  }

  def domain =  Action {
    
    val array = DataSampleUtil.getDomainBlackSample().sortBy(x => x._4).reverse
    val sum = array.map(x => x._4).sum
    Ok(dns.views.html.malware.domain(array.map(x => Array(x._1, x._2, x._3, x._4))))
  }
  
  def virus =  Action {
    val array = DataSampleUtil.getDomainBlackSample().sortBy(x => x._4).reverse
    val sum = array.map(x => x._4).sum
    Ok(dns.views.html.malware.virus(array.map(x => x._2 -> x._4), sum))
  }
}

